#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative 'lib/common'

PLYCOUNT_COLUMN = 23  # i.e. 24th field
MOVELIST_COLUMN = 27  # i.e. 28th field

def first_player(move_number)
  move_number == '1w'
end

def print_setup(move_number, square2piece, setup_to_mirror)
  mirror_board(square2piece) if setup_to_mirror

  printf '%s %s', move_number,
         square2piece.sort_by { |square, _piece| square.reverse }
                     .collect { |_row, piece| piece }
                     .each_slice(BOARD_SIZE)
                     .collect(&:join).join('/')
  if first_player(move_number)
    print '  '
  else
    print "\n"
  end
end

def mirror_board(square2piece)
  res = {} # square => piece
  square2piece.each do |square, piece|
    res[mirror_square(square)] = piece
  end
  square2piece.replace(res)
end

def mirror_square(square)
  square.sub(/^./) { |column| mirror_column(column) }
end

def mirror_column(column)
  ((2 * 'a'.ord) + BOARD_SIZE - column.ord - 1).chr # i.e. a => h, b => g, etc.
end

each_game do |fields|
  next if fields[PLYCOUNT_COLUMN].to_i < NB_PLAYERS

  moves = fields[MOVELIST_COLUMN].split('\\n')
  if moves[1] == '1b takeback'
    # move sequence is: 1w foo, 1b takeback, 1w bar, 1b baz
    moves.shift(2) # therefore we only keep: 1w bar, 1b baz
  end
  if moves[2] == '2w takeback'
    # move sequence is: 1w foo, 1b bar, 2w takeback, 1b baz
    moves.slice!(1, 2) # therefore we only keep: 1w foo, 1b baz
  end

  setup_to_mirror = false
  moves.first(NB_PLAYERS).each do |player_setup|
    move_number, placement = player_setup.split(' ', 2)

    square2piece = {}
    placement.split.each do |word|
      piece = word[0].upcase
      square = word[1..2]

      if first_player(move_number) && (piece == 'E') && square =~ (/^[a-d]/)
        setup_to_mirror = true
      end

      square2piece[square] = piece
    end

    print_setup(move_number, square2piece, setup_to_mirror)
  end
end
